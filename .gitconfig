[alias]
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  remotes = remote -v
  # Pretty log output
  hist = log --graph --pretty=format:'%Cred%h%Creset %s%C(yellow)%d%Creset %Cgreen(%cr)%Creset [%an]' --abbrev-commit --date=relative
  # Changelog Prep
  cl = log --pretty=format:'%s'
  st = status -sb
  rv = merge --no-commit --no-ff
  stc = diff --cached --name-only
  sup = git diff --word-diff branch --set-upstream-to=origin/develop
  ignore = update-index --skip-worktree
  unignore = update-index --no-skip-worktree
  ignored = !git ls-files -v | grep ^S
  dc = difftool --cached
  dt = difftool
  l  = log --graph --oneline --decorate
  ld = log --graph --pretty=format:'%Cred%h%Creset %s%C(yellow)%d%Creset %Cgreen(%cr)%Creset [%an]' --abbrev-commit --date=relative
  ll = log --stat --decorate --source -p
  jt = "!git log --pretty=\"%s\" \"$1\" | grep -Eo \"[A-Za-z]{2,6}[ -_]\\d{1,7}\" | sort -h | uniq #"
  aww = !git diff -w --no-color | git apply --cached --ignore-whitespace
  unchanged = "!( git ls-files --modified \"$1\" ; git ls-files \"$1\" ) | sort | uniq -u"
  # from: https://stackoverflow.com/questions/8475448/find-merge-commit-which-includes-a-specific-commit
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"

[fetch]
  prune = true

[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

# Use `origin` as the default remote on the `master` branch in all cases
#[branch "master"]
#  remote = origin
#  merge = refs/heads/master

[user]
  name = Chris Shaffer
  email = chris.shaffer@cqlcorp.com
  signingkey = 4682C9AD

[core]
  excludesfile = /Users/clstopher/.gitignore_global

[difftool "p4merge"]
  cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$LOCAL\" \"$REMOTE\"
  path = 

[mergetool "p4merge"]
  cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
  trustExitCode = true

[merge]
  tool = p4merge

[mergetool]
  keepTemporaries = false
  prompt = false
  keepBackup = false

[push]
  default = upstream

[commit]
  gpgsign = true

[diff]
  wsErrorHighlight = old,new

[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path = 

[mergetool "sourcetree"]
  cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[pull]
	ff = only
[init]
	defaultBranch = main
